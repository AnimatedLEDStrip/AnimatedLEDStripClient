---
cache:
  directories:
    - $HOME/.m2
  pip: true

git:
  submodules: false

branches:
  only:
    - master
    - /^travis.*/
    - /^v.*/

stages:
  - name: test
  - name: deploy kotlin snapshot
    if: branch = master AND type != pull_request
  - name: deploy kotlin
    if: branch =~ ^v.*-kt$
  - name: deploy python
    if: branch =~ ^v.*-py$
  - name: deploy ruby
    if: branch =~ ^v.*-rb$

jobs:
  include:

    # Kotlin/Java

    - stage: test
      language: java
      jdk: openjdk9

      before_script:
        - cd client-kotlin-java

      install: skip
      after_success: bash <(curl -s https://codecov.io/bash) -F kotlinjava -s ./target/site/jacoco/

    - stage: deploy kotlin
      language: java
      jdk: openjdk9

      before_script:
        - cd client-kotlin-java

      script: skip
      install: skip
      deploy:
        - provider: script
          script: mvn --settings .maven.xml site -DskipTests=true -B && git add dokka
          on:
            all_branches: true
        - provider: pages
          skip-cleanup: true
          github-token: $GITHUB_TOKEN
          keep-history: true
          verbose: true
          local_dir: ./dokka
          on:
            all_branches: true

    - stage: deploy kotlin
      language: java
      jdk: openjdk9

      before_script:
        - cd client-kotlin-java
      before_install:
        - echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
        - echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust

      install: skip
      script: skip
      deploy:
        - provider: script
          script: mvn deploy --settings .maven.xml -DskipTests=true -B
          on:
            all_branches: true

    - stage: deploy kotlin snapshot
      language: java
      jdk: openjdk9

      before_script:
        - cd client-kotlin-java
      before_install:
        - echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
        - echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust

      install: skip
      script: skip
      deploy:
        - provider: script
          script: mvn deploy --settings .maven.xml -DskipTests=true -B
          on:
            all_branches: true


    # C++

    - stage: test
      language: c++
      compiler:
        - gcc

      git:
        submodules: true

      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
            - g++-6

      env:
        - CC=gcc-6
        - CXX=g++-6

      before_script:
        - cd client-c++

      script:
        - mkdir -p build/run
        - cd build/run
        - cmake -DCMAKE_BUILD_TYPE=Debug ../..
        - make
        - make test_with_coverage

      after_success:
        - mv test_with_coverage.info.cleaned test_with_coverage.info
        - bash <(curl -s https://codecov.io/bash) -F cpp -X gcov


    # Python

    - stage: test
      language: python
      python: 3.7

      before_script:
        - cd client-python3

      install: pip install tox tox-travis coverage
      script: tox
      after_success: bash <(curl -s https://codecov.io/bash) -F python3 -s ./client-python3

    - stage: deploy python
      language: python
      python: 3.7

      before_script:
        - cd client-python3

      install: skip
      script: skip
      deploy:
        - provider: pypi
          user: "__token__"
          password: $PYPI_TOKEN
          distributions: "sdist bdist_wheel"
          skip_existing: true
          on:
            all_branches: true


    # Go

    - stage: test
      language: go

      go:
        - 1.8.x
        - tip

      before_install:
        - cd client-go
        - go get -t -v ./...
        - chmod +x ./test.sh

      script:
        - ./test.sh

      after_success: bash <(curl -s https://codecov.io/bash) -F go


    # Ruby

    - stage: test
      language: ruby

      rvm:
        - 2.6.5

      env:
        - CODECOV_FLAG=ruby

      before_install:
        - cd client-ruby
        - gem update --system
        - gem install bundler --no-document

      script: bundle exec rake

    - stage: deploy ruby
      language: ruby

      rvm:
        - 2.6.5

      before_install:
        - cd client-ruby
        - gem update --system
        - gem install bundler --no-document

      install: skip
      script: skip
      deploy:
        - provider: rubygems
          api_key: $RUBYGEMS_KEY
          gem: animatedledstrip-client
          on:
            all_branches: true


    # Dart

    - stage: test
      language: dart

      before_install:
        - cd client-dart

      before_script:
        - pub global activate coverage

      script:
        - pub run test

      after_success:
        - dart --disable-service-auth-codes --enable-vm-service=9292 --pause-isolates-on-exit test/test_all.dart &
        - pub global run coverage:collect_coverage --port=9292 --out=coverage.json --wait-paused --resume-isolates
        - pub global run coverage:format_coverage --lcov --packages=.packages --in=coverage.json --out=lcov.info --report-on=lib
        - rm coverage.json
        - bash <(curl -s https://codecov.io/bash) -F dart
